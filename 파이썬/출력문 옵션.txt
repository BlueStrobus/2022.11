# 구분좌 : sup  <-separation
__________________________________________
>>>print('S','E','P', sep='@')                       |
__________________________________________|
출력 >>>>> S@E@P
S , E , P라는 문자열 사이에 @가 끼워넣어져 출력된다. 즉, 구분자는 @가 된다.

# 다음 출력 줄바꿈 없이 연결
end옵션을 사용하면 그 뒤의 출력값과 이어서 출력한다. (즉, 줄바꿈을 하지 않게 된다.)
_______________________
print("I like", end=" ")  |
print("money")             |
______________________|
출력 >>>>> I like money

그리고, 저 end=' ' 사이에 무언가를 입력하게되면, sep와 비슷한 기능을 한다.(print 사이에 구분좌) 첫번째 출력문과, 두번째 출력문 사이에 end에 넣어준 문자열이 출력된다.
__________________________________
print("I like", end=" gold and ")    |
print("money")                              |
_________________________________ |                                
출력 >>>>> I like gold and money

# format
format 
 

포매팅을 통해 특정 서식에 따라 문자를 출력할 수 있다. 부분적으로 문자열을 바꾸어 반복적으로 출력할때 유용하다.

예를들어서 날짜를 출력하는 경우 : 2019년 9월 29일 입니다. 2019년 9월 30일 입니다. 2019년 10월 01일 입니다.

숫자만 바꾸어주면 되는데, 이를 일일이 타이핑 하면 매우 비효율적이다. 이때 format 함수를 사용하면 편하다.

 

숫자를 사용한 format
print("{0}월{1}일 입니다.".format(10,31))

출력 >>>>> 10월31일 입니다.

%기호를 사용한 format
print("%s을 %d개 주세요."%("아이스크림", 10))
출력 >>>>> 아이스크림을 10개 주세요.
 

출력문 부분에 %s : 문자열 , %d : 정수 , %f : 실수 로 삽입될 부분을 지정하고, 뒤에 %(값1, 값2, 값3)의 형태로 붙여주면 된다. 데이터 형태를 미리 지정해야하므로 format보다 까다롭다. 그리고 출력문과 %(값) 사이에 콤마가 들어가지 않는다.

# Escape
특수한 경우에, 파이썬 문법을 escape(탈출)하여 출력할 수 있도록 도와주는 문자들이다. 예를들어서 "를 출력하고 싶을때, 또는 역슬래시 \를 출력하고 싶을때 사용하면 된다.

 

\n  : 줄바꿈

\t :   탭(TAP)

\\  :  '\' 출력

\'  :  작은따옴표 출력

\"  :  큰따옴표 출력

\b  :  백스페이스


